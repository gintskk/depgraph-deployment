# template for data processing plugin
x-data-processing-plugin: &data-processing-plugin
  image: ghcr.io/cops-lab/maven-explorer:0.1.5
  restart: "unless-stopped"
  depends_on: [ "kafka" ]
  volumes: [
    "${HOST_BASE}:${CONT_BASE}",
    "${HOST_COMPLETION}:${CONT_COMPLETION}",
    "${HOST_LANES}:${CONT_LANES}",
    "${HOST_RESULTS}:${CONT_RESULTS}",
    # default values suffice for .m2
    "${HOST_M2}:/root/.m2/"
    # MVN_HOME is container specific and does not need mapping
  ]


services:

  ## INFRASTRUCTURE

  kafka:
    image: docker.io/bitnami/kafka:3.6.1
    restart: unless-stopped
    ports:
      - 19092:19092
    volumes: [
      "${HOST_KAFKA}:/bitnami/kafka"
    ]
    environment:
      # Kraft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=INSIDE://:9092,HOST://:19092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INSIDE://kafka:9092,HOST://localhost:19092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INSIDE
      # Custom ... (start with KAFKA_CFG_)
      # allows balanced configs with 1/2/3/4/6/12 clients
      - KAFKA_CFG_NUM_PARTITIONS=12
      # optimize timeouts to avoid frequent rebalancing
      - KAFKA_CFG_GROUP_CONSUMER_MAX_SESSION_TIMEOUT_MS=1800000
      - KAFKA_CFG_GROUP_CONSUMER_SESSION_TIMEOUT_MS=1800000
      - KAFKA_CFG_GROUP_CONSUMER_MAX_POLL_INTERVAL_MS=900000
      - KAFKA_CFG_GROUP_CONSUMER_MAX_HEARTBEAT_INTERVAL_MS=600000
      - KAFKA_CFG_GROUP_CONSUMER_HEARTBEAT_INTERVAL_MS=600000
      # required to avoid message deletion
      - KAFKA_CFG_LOG_RETENTION_HOURS=-1
      # required to delay the reset of offsets for consumer group (no -1 option)
      - KAFKA_CFG_OFFSETS_RETENTION_MINUTES=2147483647

  kafdrop:
    #profiles: ["disabled"]
    image: obsidiandynamics/kafdrop:4.0.0
    restart: "unless-stopped"
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    depends_on:
      - kafka

  nginx:
    image: nginx
    restart: "unless-stopped"
    ports:
      - 18080:80
    volumes: [
      "${HOST_NGINX}/html:/data/html",
      "${HOST_NGINX}/nginx.conf:/etc/nginx/nginx.conf",
      "${HOST_M2}:/root/.m2/",
    ]

  ## FASTEN SERVICES

  easy-index:
    #profiles: ["disabled"]
    image: ghcr.io/cops-lab/maven-easy-index:0.0.9
    restart: "unless-stopped"
    ports:
      - 1234:8080
    volumes: [
      "${HOST_EASY_INDEX}:/cache/",
    ]

  index-crawler:
    <<: *data-processing-plugin
    #profiles: ["disabled"]
    command: [
      "--run", "dev.c0ps.mx.indexcrawler.Main",
      "--instanceId", "ic1",
      #
      "--mc.easyIndexUrl", "http://easy-index:8080/",
      "--mc.firstConsideredIndex", "323",
      #
      "--logLevel", "${LOG_LEVEL}",
      "--kafka.url", "${KAFKA_URL}",
      "--exec.delayMS", "${EXEC_DELAY_MS}",
      #
      "--dir.base", "${CONT_BASE}",
      "--dir.completion", "${CONT_COMPLETION}",
      "--dir.lanes", "${CONT_LANES}",
      "--dir.results", "${CONT_RESULTS}"
    ]
    depends_on: [ "kafka", "easy-index" ]

  downloader1:
    <<: *data-processing-plugin
    #profiles: ["disabled"]
    command: [
      "--run", "dev.c0ps.mx.downloader.Main",
      "--instanceId", "d1",
      #
      "--logLevel", "${LOG_LEVEL}",
      "--kafka.url", "${KAFKA_URL}",
      "--exec.delayMS", "${EXEC_DELAY_MS}",
      #
      "--dir.base", "${CONT_BASE}",
      "--dir.completion", "${CONT_COMPLETION}",
      "--dir.lanes", "${CONT_LANES}",
      "--dir.results", "${CONT_RESULTS}"
    ]
#
#  downloader2:
#    <<: *data-processing-plugin
#    #profiles: ["disabled"]
#    command: [
#      "--run", "dev.c0ps.mx.downloader.Main",
#      "--instanceId", "d2",
#      #
#      "--logLevel", "${LOG_LEVEL}",
#      "--kafka.url", "${KAFKA_URL}",
#      "--exec.delayMS", "${EXEC_DELAY_MS}",
#      #
#      "--dir.base", "${CONT_BASE}",
#      "--dir.completion", "${CONT_COMPLETION}",
#      "--dir.lanes", "${CONT_LANES}",
#      "--dir.results", "${CONT_RESULTS}"
#    ]

#  downloader3:
#    <<: *data-processing-plugin
#    #profiles: ["disabled"]
#    command: [
#      "--run", "dev.c0ps.mx.downloader.Main",
#      "--instanceId", "d3",
#      #
#      "--logLevel", "${LOG_LEVEL}",
#      "--kafka.url", "${KAFKA_URL}",
#      "--exec.delayMS", "${EXEC_DELAY_MS}",
#      #
#      "--dir.base", "${CONT_BASE}",
#      "--dir.completion", "${CONT_COMPLETION}",
#      "--dir.lanes", "${CONT_LANES}",
#      "--dir.results", "${CONT_RESULTS}"
#    ]
#
#  downloader4:
#    <<: *data-processing-plugin
#    #profiles: ["disabled"]
#    command: [
#      "--run", "dev.c0ps.mx.downloader.Main",
#      "--instanceId", "d4",
#      #
#      "--logLevel", "${LOG_LEVEL}",
#      "--kafka.url", "${KAFKA_URL}",
#      "--exec.delayMS", "${EXEC_DELAY_MS}",
#      #
#      "--dir.base", "${CONT_BASE}",
#      "--dir.completion", "${CONT_COMPLETION}",
#      "--dir.lanes", "${CONT_LANES}",
#      "--dir.results", "${CONT_RESULTS}"
#    ]
#
#  downloader5:
#    <<: *data-processing-plugin
#    #profiles: ["disabled"]
#    command: [
#      "--run", "dev.c0ps.mx.downloader.Main",
#      "--instanceId", "d5",
#      #
#      "--logLevel", "${LOG_LEVEL}",
#      "--kafka.url", "${KAFKA_URL}",
#      "--exec.delayMS", "${EXEC_DELAY_MS}",
#      #
#      "--dir.base", "${CONT_BASE}",
#      "--dir.completion", "${CONT_COMPLETION}",
#      "--dir.lanes", "${CONT_LANES}",
#      "--dir.results", "${CONT_RESULTS}"
#    ]
#    networks:
#      - maven-explorer-network
#
#  downloader6:
#    <<: *data-processing-plugin
#    #profiles: ["disabled"]
#    command: [
#      "--run", "dev.c0ps.mx.downloader.Main",
#      "--instanceId", "d6",
#      #
#      "--logLevel", "${LOG_LEVEL}",
#      "--kafka.url", "${KAFKA_URL}",
#      "--exec.delayMS", "${EXEC_DELAY_MS}",
#      #
#      "--dir.base", "${CONT_BASE}",
#      "--dir.completion", "${CONT_COMPLETION}",
#      "--dir.lanes", "${CONT_LANES}",
#      "--dir.results", "${CONT_RESULTS}"
#    ]

#  pom-analyzer1:
#    <<: *data-processing-plugin
#    #profiles: ["disabled"]
#    command: [
#      "--run", "dev.c0ps.mx.pomanalyzer.Main",
#      "--instanceId", "pa1",
#      #
#      "--logLevel", "${LOG_LEVEL}",
#      "--kafka.url", "${KAFKA_URL}",
#      "--exec.delayMS", "${EXEC_DELAY_MS}",
#      #
#      "--dir.base", "${CONT_BASE}",
#      "--dir.completion", "${CONT_COMPLETION}",
#      "--dir.lanes", "${CONT_LANES}",
#      "--dir.results", "${CONT_RESULTS}"
#    ]

#  pom-analyzer2:
#    <<: *data-processing-plugin
#    #profiles: ["disabled"]
#    command: [
#      "--run", "dev.c0ps.mx.pomanalyzer.Main",
#      "--instanceId", "pa2",
#      #
#      "--logLevel", "${LOG_LEVEL}",
#      "--kafka.url", "${KAFKA_URL}",
#      "--exec.delayMS", "${EXEC_DELAY_MS}",
#      #
#      "--dir.base", "${CONT_BASE}",
#      "--dir.completion", "${CONT_COMPLETION}",
#      "--dir.lanes", "${CONT_LANES}",
#      "--dir.results", "${CONT_RESULTS}"
#    ]

#  depgraph:
#    <<: *data-processing-plugin
#    profiles: ["disabled"]
#    command: [
#      "--run", "dev.c0ps.mx.depgraph.Main",
#      "--instanceId", "dg1",
#      #
#      "--logLevel", "${LOG_LEVEL}",
#      "--kafka.url", "${KAFKA_URL}",
#      "--exec.delayMS", "${EXEC_DELAY_MS}",
#      #
#      "--dir.base", "${CONT_BASE}",
#      "--dir.completion", "${CONT_COMPLETION}",
#      "--dir.lanes", "${CONT_LANES}",
#      "--dir.results", "${CONT_RESULTS}"
#    ]
#    ports:
#      - "18081:8080"

networks:
  default:
    attachable: true